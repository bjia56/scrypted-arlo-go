name: Build

on:
  push:
    branches: ["main"]
    paths: ["scrypted_arlo_go/**", ".github/workflows/build_wheel.yml"]
  pull_request:
    paths: ["scrypted_arlo_go/**", ".github/workflows/build_wheel.yml"]
  workflow_dispatch:
  workflow_call:

jobs:
  build_macos:
    #if: false
    name: MacOS ${{ matrix.arch_cibw_go[0] }}
    strategy:
      fail-fast: false
      matrix:
        arch_cibw_go:
          - [ "x86_64", "amd64" ]
          - [ "arm64", "arm64" ]
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4

      - name: set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.19.x"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.10

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@v0.17.0

      - name: build wheels
        run: ./scrypted_arlo_go/builder/macos_build_wheels.sh
        env:
          CIBW_ARCHS: ${{ matrix.arch_cibw_go[0] }}
          PYTHON_BINARY_PATH: /usr/local/bin/python_for_build
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            GOARCH=${{ matrix.arch_cibw_go[1] }}
            CGO_ENABLED=1
            MACOSX_DEPLOYMENT_TARGET=10.15

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.arch_cibw_go[0] }}
          path: ./wheelhouse/*.whl

  build_linux_x86_64:
    #if: false
    name: Linux x86_64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.1
        with:
          package-dir: ./scrypted_arlo_go
        env:
          CIBW_BUILD: "cp3*_x86_64 pp3*_x86_64"
          CIBW_SKIP: "cp36-* cp37-* cp38-* *-musllinux_x86_64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            CGO_ENABLED=1
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.19.9.linux-amd64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.10
            go install golang.org/x/tools/cmd/goimports@v0.17.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: ./wheelhouse/*.whl

  build_linux_arm64:
    #if: false
    name: Linux arm64
    runs-on: ubuntu-22.04-arm

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.1
        with:
          package-dir: ./scrypted_arlo_go
        env:
          CIBW_BUILD: "cp3*_aarch64 pp3*_aarch64"
          CIBW_SKIP: "cp36-* cp37-* cp38-* *-musllinux_aarch64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            CGO_ENABLED=1
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.19.9.linux-arm64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.10
            go install golang.org/x/tools/cmd/goimports@v0.17.0

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-arm64
          path: ./wheelhouse/*.whl

  build_linux_armv7l:
    #if: false
    name: Linux armv7l
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python3_version: [ 9, 10, 11, 12, 13 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build 3.${{ matrix.python3_version }} wheels via Docker
        uses: docker/build-push-action@v6
        with:
          context: ./scrypted_arlo_go
          file: ./scrypted_arlo_go/builder/Dockerfile.armv7l
          build-args: |
            PYTHON3_VERSION=${{ matrix.python3_version }}
          push: false
          platforms: linux/armhf
          tags: armv7l:latest
          load: true

      - name: Extract output
        run: |
          docker run -v /tmp/output:/host armv7l:latest bash -c "cp /export/* /host/"
          tar -zcvf /tmp/output.tar.gz /tmp/output

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-armv7l-${{ matrix.python3_version }}
          path: /tmp/output/*.whl

  build_windows:
    #if: false
    name: Windows x86_64
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - name: set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.19.x"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.10

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@v0.17.0

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.1
        with:
          package-dir: ./scrypted_arlo_go
        env:
          CIBW_BUILD: "cp3* pp3*"
          CIBW_SKIP: "cp36-* cp37-* cp38-*"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            GOARCH=amd64
            CGO_ENABLED=1

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows
          path: ./wheelhouse/*.whl

  all_builds_passed:
    needs:
    - build_macos
    - build_linux_x86_64
    - build_linux_arm64
    - build_linux_armv7l
    - build_windows
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo "All builds passed!"
